name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build and install all modules
        run: mvn clean install
        continue-on-error: true

      - name: Run tests
        run: mvn test
        continue-on-error: true

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: articles_feed_service/target/surefire-reports/

      - name: Build and push articles_feed_service Docker image
        run: |
          cd articles_feed_service
          mvn compile jib:build -Dimage=basmafj/articles_feed_service:latest

      - name: Build and push discovery-service Docker image
        run: |
          cd discovery_service
          mvn compile jib:build -Dimage=basmafj/discovery-service:latest

      - name: Build and push login_service Docker image
        run: |
          cd login_service
          mvn compile jib:build -Dimage=basmafj/login_service:latest

      - name: Build and push blog-feed-service Docker image
        run: |
          cd blog_feed_service
          mvn compile jib:build -Dimage=basmafj/blog-feed-service:latest

      - name: Build and push postgres-db Docker image
        run: |
          cd postgres_db
          mvn compile jib:build -Dimage=basmafj/postgres-db:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1  # Replace with your AWS region

      - name: Update kubeconfig for Amazon EKS
        run: aws eks update-kubeconfig --name spacenews --region eu-north-1

      - name: Deploy to Amazon EKS
        run: |
          kubectl apply -f k8s/apigateway-deployment.yaml
          kubectl apply -f k8s/discovery-server-deployment.yaml
          kubectl apply -f k8s/login-service-deployment.yaml
          kubectl apply -f k8s/article-feed-service-deployment.yaml
          kubectl apply -f k8s/blog-cr-service-deployment.yaml
          kubectl apply -f k8s/blog-feed-service-deployment.yaml
          kubectl apply -f k8s/postgres-db-deployment.yaml
          kubectl apply -f k8s/postgres-db-claim0-persistentvolumeclaim.yaml
