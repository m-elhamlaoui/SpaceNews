name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build and install all modules
        run: |
          ./mvnw clean install -DskipTests

      - name: Build and push Docker images with Jib
        run: |
          cd articles_feed_service
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/articles_feed_service:latest
          cd ../Blogs_feed_service
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/blogs_feed_service:latest
          cd ../reports_feed_service
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/reports_feed_service:latest
          cd ../login_service
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/login_service:latest
          cd ../blog_cr_service
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/blog_cr_service:latest
          cd ../ApiGateway
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/apigateway:latest
          cd ../Discovery_service
          ./mvnw compile jib:dockerBuild -Dimage=basmafj/discovery_service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1  # Replace with your AWS region

      - name: Update kubeconfig for Amazon EKS
        run: aws eks update-kubeconfig --name spacenews --region eu-north-1

      - name: Deploy to Amazon EKS
        run: |
          kubectl apply -f k8s/apigateway-deployment.yaml
          kubectl apply -f k8s/discovery-server-deployment.yaml
          kubectl apply -f k8s/login-service-deployment.yaml
          kubectl apply -f k8s/article-feed-service-deployment.yaml
          kubectl apply -f k8s/blog-cr-service-deployment.yaml
          kubectl apply -f k8s/blog-feed-service-deployment.yaml
          kubectl apply -f k8s/postgres-db-deployment.yaml
          kubectl apply -f k8s/postgres-db-claim0-persistentvolumeclaim.yaml
